
# To reload tmux config, use '<leader> r'
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config Dave!"


# To change leader from default Ctrl-b: 
# We also need to send C-a to the process running tmux to move cursor to the beginning of the CLI - just needs two C-a sequences  
# Ctrl a 
# bind-key C-a send-prefix 
# set -g prefix C-a
#
# Ctrl space 
bind-key C-Space send-prefix 
set -g prefix C-Space

# Colour of status bar (default green)
#set -g status-style 'bg=#333333 fg=#5eacd3'


# Use 256 xterm for pretty colors. 
# This enables same colors from iTerm2 within tmux.
# This is recommended in neovim :healthcheck
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# set vi mode
setw -g mode-keys vi

# Use vim key bindings and use y to yank selection into buffer ie, 
# overwrite the copy-buffer (default is 'prefix-Enter')
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
# I prefer to press 'q' to cancel copy mode hence not using 'copy-selection-and-cancel':
#bind -T copy-mode-vi y send -X copy-selection-and-cancel
# The -x flag should prevent exiting copy mode 
bind -T copy-mode-vi y send -X copy-selection -x
#bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
#bind -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"
# Note we are appending the selection with 'a'. 
bind -T copy-mode-vi a send -X append-selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys copy-pipe-and-cancel "pbcopy"

# Paste using 'prefix-p':
# Don't bother using custom 'p' to paste buffer, use the default 
# 'C-]' key sequence ('p' clashes with keystrokes to switch to prevous tmux window)
#unbind p
#bind p paste-buffer


# decrease command delay (increases vim responsiveness)
set -sg escape-time 0

# increase repeat time for repeatable commands
set -g repeat-time 1000

# re-number windows when one is closed
# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

set -g renumber-windows on

# Open panes in current directory 
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"


# resize split panes (bind means tmux leader key)
# note, don't use <leader> '[' or ']' as in vim because they clash with tmux copy/paste mode
bind -r h resize-pane -L 5 # tmux-prefix h (-r allows for repeated pressing of 'h')
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r m resize-pane -Z

# Swap windows
# 'bind-key -n' means you don't need to use the tmux prefix (-n for 'no prefix')
#bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
#bind-key -n C-S-Right swap-window -t +1\; select-window -t +1
# DM: I prefer: tmux prefix (no '-n') with repeating (-r) arrow ('<prefix> arrow').
# Using tmux prefix means I don't bugger up other programs key bindings. I would to 'Ctrl-Cmd-Left' 
# as mapped in browser but mac Cmd key it isn't supported by tmux.
bind-key -r Left swap-window -t -1\; select-window -t -1
bind-key -r Right swap-window -t +1\; select-window -t +1
# Below to do <prefix> shift+arrow
#bind-key S-Left swap-window -t -1\; select-window -t -1
#bind-key S-Right swap-window -t +1\; select-window -t +1

# Switch panes with hjkl: 
# (Using Ctrl-h/j/k/l via toomey plugin instead)
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

## Quickly switch panes, DM?
#unbind ^J
#bind ^J select-pane -t :.+

# switch panes using Alt-arrow without prefix
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# highlight current window
setw -g window-status-style fg=cyan,bg=colour235
setw -g window-status-current-style fg=white,bold,bg=red

# set color of active pane
#set -g pane-border-style fg=colour240,bg=black
#set -g pane-active-border-style fg=green,bg=black

# color status bar
#set -g status-style fg=white,bg=colour235
# color of message bar
#set -g message-style fg=white,bold,bg=green

# Enable using mouse to drag panes.
set -g mouse on

set-option -gw xterm-keys on

tmux_conf_theme_left_separator_main=''
tmux_conf_theme_left_separator_sub=''
tmux_conf_theme_right_separator_main=''
tmux_conf_theme_right_separator_sub=''

# Use Alt-vim keys without prefix key to switch panes
#bind -n M-h previous-window
#bind -n M-l next-window

# Use Alt-arrow keys without prefix key to switch panes
#bind -n M-Left previous-window
#bind -n M-Right next-window

# increase scroll-back history
set -g history-limit 5000

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

############################
## Status Bar
############################

# enable UTF-8 support in status bar
set -gq status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
#set -g status-justify centre

# show session, window, pane in left status bar
#set -g status-left-length 40
#set -g status-left '#[fg=black] #S #[fg=black]#I/#[fg=black]#P '
# show date, time
set -g status-right '#[fg=black] %d %b %R '


###########################
# Plugins
# https://github.com/tmux-plugins/tpm
# Plugin management scripts (as an alt to the key bindings: https://github.com/tmux-plugins/tpm/blob/master/docs/managing_plugins_via_cmd_line.md)
###########################
# To install plugins:
#   1) Add plugin down here
#   2) Prefix + I to install plugin (or '~/.tmux/plugins/tpm/bin/install_plugins' then restart iterm) 
# To update plugins:
#   1) Prefix + U (or '~/.tmux/plugins/tpm/bin/update_plugins all' then restart iterm)
# To remove plugins:
#   1) Remove line down here
#   2) Prefix + ALT + U (or '~/.tmux/plugins/tpm/bin/clean_plugins' then restart iterm)
# If you're using iTerm2 on a Mac you may need to go to your Profiles, 
# then keys and select that the `option` key should be treated as `Esc+` 
# in order for the `Prefix + ALT + U` combination to work.'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'dracula/tmux'
# vim-tmux-nav to use 'Ctrl hjkl' to jump between panes
set -g @plugin 'christoomey/vim-tmux-navigator'
#set -g @dracula-show-powerline true
#set -g @dracula-show-left-icon session
#set -g @dracula-plugins "cpu-usage ram-usage"
# Copy to system clipboard with tmux-yank plugin (does not change the copy-mode-vi key bindings)
# Note, only works with 'y', it does not seem to support appending selection to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
# By default, tmux-yank will exit copy mode after yanking text. If you wish to remain in copy mode, you can set @yank_action
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# https://github.com/tmux-plugins/tpm
run -b '~/.tmux/plugins/tpm/tpm'

